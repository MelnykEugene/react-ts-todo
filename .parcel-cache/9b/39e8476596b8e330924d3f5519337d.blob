var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _ItemItemTsx = require("../Item/Item.tsx");
  require("./List.css");
  var _jsxFileName = "/Users/yevhenmelnyk/Documents/webdev/projects/todoapp/src/List/List.tsx";
  function _extends() {
    _extends = Object.assign || (function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    });
    return _extends.apply(this, arguments);
  }
  const List = props => {
    return props.list.map(item => {
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "item-container",
          __self: undefined,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 9,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_ItemItemTsx.Item, _extends({}, item, {
          __self: undefined,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 10,
            columnNumber: 11
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("button", {
          className: "item-button",
          __self: undefined,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 11,
            columnNumber: 11
          }
        })))
      );
    });
  };
  _c = List;
  exports.default = List;
  var _c;
  $RefreshReg$(_c, "List");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
